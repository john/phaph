:css
  h5 { margin: 15px 0 0 0;}

%h1{:style => 'margin-bottom: 5px;'}
  = @grant.name
  
%div{:style => 'margin-top: 0;'}
  = @grant.description

%div
  #{link_to @grant.creator.name, people_path( @grant.creator.id, @grant.creator.name.parameterize )}, 
  = link_to @grant.lab.name, slugged_lab_path( @grant.lab.id, @grant.lab.name.parameterize )
    

%h5
  %b
    Source
%div
  = @grant.source


%h5
  %b Amount
%div
  = number_to_currency @grant.amount
  
%h5
  %b Amount remaining
%div
  = number_to_currency @grant.amount_remaining

%h5
  Starts at:
%div
  - if @grant.starts_at.present?
    = @grant.starts_at.strftime("%B %d, %Y")

%h5
  Ends at:
%div
  - if @grant.ends_at.present?
    = @grant.ends_at.strftime("%B %d, %Y")
  
%hr

%h4
  Costs
  %span{:style => 'font-weight: normal; font-size: 0.8em; padding-left: 5px;'}
    = link_to 'add', new_cost_path(g: @grant.id)
    
- if @grant.costs.present?
  #flot
  
  :javascript
    $(document).ready(function() {
      // var costs = [[1, 300], [2, 600], [3, 550], [4, 400], [5, 300]];
      var costs = [#{@costs_array}];
      var options = { xaxis: { ticks: #{@costs_array.map{|ca| ['foo', ca[0]]}} } };
    
      // $.plot($("#flot"), data, options);
      $.plot($("#flot"), costs, {
        xaxis: {
          mode: "time",
          timeformat: "%b/%d/%y",
          monthNames: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "11", "12"]
        },
        yaxis: { tickFormatter: function numberWithCommas(x) {
          return '$' + x.toString().replace(/\B(?=(?:\d{3})+(?!\d))/g, ",");
          }
        },
      });
    
    });
    
    
  #costs
    %ul{:class => 'list-unstyled'}
      - @grant.costs.each do |cost|
        %li
          %h5
            #{link_to cost.name, cost_path(cost.id)}
            %small
              (#{cost.starts_at.strftime("%B %d, %Y")}#{(cost.ends_at.present?) ? " to #{cost.ends_at.strftime("%B %d, %Y")})" : ')'}
            

.clearfix
-# %h4
-#   Categories
-#   %span{:style => 'font-weight: normal; font-size: 0.8em; padding-left: 5px;'}
-#     %a{:onclick => "$('.add_category').toggle();", :class => 'add_category'}
-#       add
-#
-# .add_category{:style => 'display:none;'}
-#   = form_for Category.new, :html => {:class => 'form-inline'} do |f|
-#     = f.hidden_field :creator_id, :value => current_user.id
-#     = f.hidden_field :grant_id, :value => @grant.id
-#     = f.hidden_field :lab_id, :value => @grant.lab.id
-#
-#     -# = f.label :user_id, :class => 'sr-only'
-#     -# = f.select :user_id, options_from_collection_for_select(User.all, :id, :name), :class => 'form-control'
-#     -#
-#     = f.label :name, :class => 'sr-only'
-#     = f.text_field :name, :class => 'form-control', :placeholder => 'Category name'
-#
-#     &nbsp;
-#     = f.submit "Go", :id => 'category_submit', :class => 'btn btn-default'
-#
-#     &nbsp;&nbsp;
-#     %a{:href => '#', :onclick => "$('.add_category').toggle()"}
-#       Cancel
-#
-# - if @grant.categories.present?
-#   %div
-#     %ul{:class => 'list-unstyled'}
-#       - @grant.categories.each do |category|
-#         %li
-#           = link_to category.name, slugged_category_path(category.id, category.name.parameterize)
-#

-# %h5
-#   %b Overhead
-# %div
-#   = @grant.overhead
-#
-# %h5
-#   %b State:
-# %div
-#   = @grant.state